{"version":3,"file":"static/js/847.72aed8eb.chunk.js","mappings":"sMA2DA,UArDqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaV,GAASW,MAAK,SAAAC,GAAI,OAAIR,EAASQ,EAAKC,KAAlB,GAChC,GAAE,CAACb,KAGF,6BACE,SAAC,KAAD,CAAMc,GAAIT,EAAV,wBACA,iBAAKU,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,UACGd,EAAMe,cACL,gBAAKC,IAAG,UAjBD,mCAiBC,OAAgBhB,EAAMe,aAAeE,IAAKjB,EAAMkB,SAE1D,4BACE,0BACGlB,EAAMkB,MACNlB,EAAMmB,cAAN,YAA2BnB,EAAMmB,aAAaC,MAAM,EAAG,GAAvD,SAEH,kDAAmBC,KAAKC,MAA2B,GAArBtB,EAAMuB,cAApC,SACA,sCACA,uBAAIvB,EAAMwB,YACV,mCACCxB,EAAMyB,SACL,uBAAIzB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAIrD,mBACA,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMlB,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMS,GAAG,UAAUP,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,mBACA,SAAC,EAAA4B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,8LCtDKC,EAAe,CACnBC,OAAQ,CACNC,QAHQ,qCAOL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oFACY,kDADZ,kBAIUC,EAAAA,EAAAA,IAHE,kDAGkBJ,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uEACY,4CACjBR,EAAaC,OAAOO,MAAQA,EAFvB,kBAKUJ,EAAAA,EAAAA,IAJE,4CAIkBJ,GAL9B,wEAOHK,QAAQC,MAAR,MAPG,gFAWA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BkC,GAA5B,8EACCC,EADD,6CACkDD,GADlD,kBAIUL,EAAAA,EAAAA,IAAUM,EAAUV,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,8EACCC,EADD,6CACkDD,EADlD,8BAIUL,EAAAA,EAAAA,IAAUM,EAAUV,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,8EACCC,EADD,6CACkDD,EADlD,8BAIUL,EAAAA,EAAAA,IAAUM,EAAUV,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gF","sources":["pages/MovieDetails.js","services/fetchApi.js"],"sourcesContent":["import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchDetails } from 'services/fetchApi';\n\nconst imageUrl = 'https://image.tmdb.org/t/p/w200';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchDetails(movieId).then(json => setMovie(json.data));\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link to={backLinkHref}>&lt; Go back</Link>\n      <div style={{ display: 'flex', gap: '16px' }}>\n        {movie.poster_path && (\n          <img src={`${imageUrl}${movie.poster_path}`} alt={movie.title} />\n        )}\n        <div>\n          <h2>\n            {movie.title}\n            {movie.release_date && ` (${movie.release_date.slice(0, 4)})`}\n          </h2>\n          <p>User Score: {`${Math.round(movie.vote_average * 10)}%`}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          {movie.genres && (\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          )}\n        </div>\n      </div>\n      <hr />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '4f1566ad36c0a1eb2cf16ddd2af1a0e7';\nconst searchParams = {\n  params: {\n    api_key: KEY,\n  },\n};\n\nexport async function fetchTrending() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchQuery(query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  searchParams.params.query = query;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDetails(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCast(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchDetails","then","json","data","to","style","display","gap","poster_path","src","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","searchParams","params","api_key","fetchTrending","axios","console","error","fetchQuery","query","id","BASE_URL","fetchCast","fetchReviews"],"sourceRoot":""}