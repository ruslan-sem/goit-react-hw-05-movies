{"version":3,"file":"static/js/785.f479db59.chunk.js","mappings":"uMA8BA,UA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,GAAW,OAAII,EAAKC,KAAKC,SAA7B,GAChC,GAAE,CAACV,KAGF,yBACsB,IAAnBG,EAAQQ,QACP,sEAEA,wBACGR,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,2BACE,qCAAaD,EAAOE,WACpB,uBAAIF,EAAOG,YAFJF,EADE,OAUtB,C,8LCzBKG,EAAe,CACnBC,OAAQ,CACNC,QAHQ,qCAOL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oFACY,kDADZ,kBAIUC,EAAAA,EAAAA,IAHE,kDAGkBJ,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uEACY,4CACjBR,EAAaC,OAAOO,MAAQA,EAFvB,kBAKUJ,EAAAA,EAAAA,IAJE,4CAIkBJ,GAL9B,wEAOHK,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8EACCC,EADD,6CACkDD,GADlD,kBAIUN,EAAAA,EAAAA,IAAUO,EAAUX,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,8EACCC,EADD,6CACkDD,EADlD,8BAIUN,EAAAA,EAAAA,IAAUO,EAAUX,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gFAUA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BqB,GAA5B,8EACCC,EADD,6CACkDD,EADlD,8BAIUN,EAAAA,EAAAA,IAAUO,EAAUX,GAJ9B,wEAMHK,QAAQC,MAAR,MANG,gF","sources":["components/Reviews/Reviews.js","services/fetchApi.js"],"sourcesContent":["import { fetchReviews } from 'services/fetchApi';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(json => setReviews([...json.data.results]));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map((review, idx) => (\n            <li key={idx}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '4f1566ad36c0a1eb2cf16ddd2af1a0e7';\nconst searchParams = {\n  params: {\n    api_key: KEY,\n  },\n};\n\nexport async function fetchTrending() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchQuery(query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  searchParams.params.query = query;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDetails(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCast(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(id) {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n\n  try {\n    return await axios.get(BASE_URL, searchParams);\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","json","data","results","length","map","review","idx","author","content","searchParams","params","api_key","fetchTrending","axios","console","error","fetchQuery","query","fetchDetails","id","BASE_URL","fetchCast"],"sourceRoot":""}